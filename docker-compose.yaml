services:
  redis:
    container_name: redis
    image: "redis:latest"
    ports:
      - "6379:6379"
    networks:
      - app-network

  db:
    user: root
    build:
      context: ./database
      dockerfile: Dockerfile
    container_name: db
    env_file:
      - .env
    ports:
      - "5432:5432"
    networks:
      - app-network
    volumes:
      - postgres_data:/var/lib/postgresql/data

  backend:
    container_name: backend
    build: ./backend
    ports:
      - "8000:8000"
    env_file:
      - .env
    networks:
      - app-network

  frontend:
    container_name: frontend
    build: ./frontend
    depends_on:
      - backend
    networks:
      - app-network

  nginx:
    container_name: nginx
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - nginx_log:/etc/nginx/var/log # Пишем логи в том

    depends_on:
      - frontend
    command: sh -c "nginx -c /etc/nginx/nginx.conf -g 'daemon off;'"
    networks:
      - app-network

volumes:
  nginx_log:
  https_certs:
  postgres_data:

networks:
  app-network:
    driver: bridge